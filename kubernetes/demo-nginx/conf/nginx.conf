worker_processes  4;  # 2 * Number of CPUs
events {
  # It's the key to high performance - have a lot of connections available
  worker_connections  19000;
}

# Each connection needs a filehandle (or 2 if you are proxying)
# Total amount of users you can serve = worker_processes * worker_connections
worker_rlimit_nofile    40000;


http {

    upstream backend_http {
        server 121.123.29.107:80; 
        
    }
    upstream backend_https {
        server 121.123.29.107:443;
        
    }
    
    # Expires map
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;
    }
    
    #proxy_cache_key "$proxy_host$request_uri"; 
    #proxy_cache_key "$scheme$proxy_host$uri$is_args$args" ##The default
    
    proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=mycache:10m inactive=1h max_size=2g use_temp_path=off;
    # keyzone size 10MB, cache size 2GB, inactive cache delete after 1 hours
        
    server {
        listen [::]:80 ;
        listen 80 ;
        
        #server_name ([\w]+)\.wikipedia\.org;
        server_name www.utar.edu.my
        
        proxy_redirect            off;
        proxy_buffers             32 4m;
        proxy_busy_buffers_size   25m;
        proxy_buffer_size         512k;
        #proxy_ignore_headers      "Cache-Control" "Expires"; # ignore from backend
        proxy_set_header          Host $host;
        #proxy_set_header          Host $server_name;
        proxy_set_header          X-Real-IP $remote_addr;
        proxy_set_header          X-Forwarded-Host $server_name;
        proxy_set_header          X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header          Connection keep-alive;              # solved the 502 issue in mobile network
        
        # Handle Web Socket connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        location / {
            proxy_pass             http://backend_http;
        }

        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|bmp|js|html|htm|svg|axd)$ {
            
            proxy_pass_request_headers      on;

            #expires $expires;
            expires 1y;                                     # "Cache-Control: max-age=86400" tells client to cache for 86400sec (24x60x60)
            #add_header Cache-Control "public";

            proxy_cache            mycache;
            proxy_cache_valid 200 302  2h;                   # cache valid for 2 hour. After that will retrieve again from backend
            proxy_cache_valid 301      1h;
            proxy_cache_valid any      1m;                   # cache those nasty 404s            
            
            proxy_cache_revalidate on;
            proxy_cache_min_uses   1;                        # only cache after how many request
            proxy_cache_use_stale  error timeout invalid_header updating
                                   http_500 http_502 http_503 http_504;

            proxy_cache_bypass $http_x_cachepurge;           # to purge cache

            add_header X-Cache-Date $upstream_http_date;     # cache added date
            add_header X-Proxy-Cache $upstream_cache_status; # Hit or Miss
            
            proxy_pass             http://backend_http;
        }
        #return 301 https://$host$request_uri;
    }

}

